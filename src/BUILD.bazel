load("@io_bazel_rules_closure//closure:defs.bzl", "closure_js_binary", "closure_js_library")
load("@npm//@bazel/typescript:index.bzl", "ts_devserver", "ts_library")
load("@npm//http-server:index.bzl", "http_server")
load("@io_bazel_rules_sass//:defs.bzl", "sass_binary")
load("index.bzl",  "index_html")

# Prod outputs
closure_js_binary(
    name = "vendor_prod",
    compilation_level = "WHITESPACE_ONLY",
    deps = [
        "//vendor:react.min",
        "//vendor:react-dom.min",
    ],
)

closure_js_binary(
    name = "bundle",
    entry_points = ["src/index.js"],
    language = "ECMASCRIPT6_STRICT",
    deps = [":main_closure_lib"],
)

closure_js_library(
    name = "main_closure_lib",
    srcs = [":main_js"],
    suppress = ["reportUnknownTypes"],
    deps = [
        "//externs:react",
        "//vendor:tslib",
    ],
)

index_html(
  name = "index_prod",
  path = "index.html",
  vendorPath = "./vendor_prod.js",
  bundlePath= "./bundle.js",
)

http_server(
  name = "server_prod",
  data = [
    ":index_prod",
    "bundle.js",
    "vendor_prod.js",
    "styles.css",
  ],
  args = ["src"],
)

ts_library(
    name = "main_ts_lib",
    srcs = glob([
        "*.ts",
        "*.tsx",
    ]),
    tsickle_typed = True,
    deps = [
        "@npm//@types/react",
        "@npm//tsickle",
    ],
)

filegroup(
    name = "main_js",
    srcs = [":main_ts_lib"],
    output_group = "es5_sources",
)

# Dev Outputs
index_html(
  name = "index_dev",
  path = "index.html",
  vendorPath = "./vendor_dev.js",
  bundlePath= "/src/bin.js",
)

ts_library(
    name = "dev_ts_lib",
    srcs = glob([
        "*.ts",
        "*.tsx",
    ]),
    tsconfig = "//:tsconfig_dev.json",
    tsickle_typed = False,
    deps = [
        "@npm//@types/react",
        "@npm//tsickle",
    ],
)

ts_devserver(
    name = "devserver",
    entry_module = "bazel_typescript_closure_sample/src/index",
    serving_path = "/src/bin.js",
    static_files = [
        ":index_dev",
        "vendor_dev.js",
        ":styles",
    ],
    deps = [
        ":dev_ts_lib",
    ],
)

closure_js_binary(
    name = "vendor_dev",
    compilation_level = "WHITESPACE_ONLY",
    deps = [
        "//vendor:react",
        "//vendor:react-dom",
    ],
)

# Shared outputs
sass_binary(
    name = "styles",
    src = "styles.scss",
)